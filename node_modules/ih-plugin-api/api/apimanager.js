/**
 *
 */

const util = require('util');

class Apimanager {
  start(plugin, { customFolder, jbaseFolder }) {
    this.plugin = plugin;
    this.customFolder = customFolder;
    this.jbaseFolder = jbaseFolder;
  }

  async getDn(did) {
    try {
      const rec = await this.plugin.get('device', { _id: did });
      const dobj = rec && rec.length ? rec[0] : '';
      return dobj ? dobj.dn : '';
    } catch (e) {
      console.log('ERROR: getDn ' + util.inspect(e));
    }
  }

  async getDevice(did) {
    try {
      const rec = await this.plugin.get('device', { _id: did });
      return rec && rec.length ? rec[0] : '';
    } catch (e) {
      console.log('ERROR: getDevice ' + util.inspect(e));
    }
  }

  async getRecords({ table, filter, opt }) {
    filter = filter || {};
    opt = opt || {};
    try {
      return this.plugin.get(table, filter, opt);
    } catch (e) {
      console.log('ERROR: getRecords table=' + table + util.inspect(e));
      return [];
    }
  }

  async findOneRecord({ table, filter, opt }) {
    const res = await this.getRecords({ table, filter, opt });
    return res && res.length ? res[0] : '';
  }

  async getIds(arr) {
    if (!arr) return [];

    const res = [];
    try {
      const recs = await this.plugin.get('devicedb', {});
      for (const arrEl of arr) {
        const rec = recs.find(item => arrEl.did == item.did && arrEl.prop == item.prop);
        // const rec = recs.findItem(item => arrEl.did == item.did && arrEl.prop == item.prop);
        let id = rec ? rec._id.substr(3) : '';
        res.push(Number(id));
      }
    } catch (e) {
      console.log('ERROR: getIds ' + util.inspect(e));
    }
    return res;
  }
}

module.exports = new Apimanager();
