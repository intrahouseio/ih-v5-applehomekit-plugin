/**
 * See Table 6-7
 */
export declare const Opcodes: {
    'HAP-Characteristic-Signature-Read': number;
    'HAP-Characteristic-Write': number;
    'HAP-Characteristic-Read': number;
    'HAP-Characteristic-Timed-Write': number;
    'HAP-Characteristic-Execute-Write': number;
    'HAP-Service-Signature-Read': number;
    'HAP-Characteristic-Configuration': number;
    'HAP-Protocol-Configuration': number;
};
/**
 * See Table 6-9
 */
export declare const Types: {
    'HAP-Param-Value': number;
    'HAP-Param-Additional-Authorization-Data': number;
    'HAP-Param-Origin (local vs remote)': number;
    'HAP-Param-Characteristic-Type': number;
    'HAP-Param-Characteristic-Instance-ID': number;
    'HAP-Param-Service-Type': number;
    'HAP-Param-Service-Instance-ID': number;
    'HAP-Param-TTL': number;
    'HAP-Param-Return-Response': number;
    'HAP-Param-HAP-Characteristic-Properties-Descriptor': number;
    'HAP-Param-GATT-User-Description-Descriptor': number;
    'HAP-Param-GATT-Presentation-Format-Descriptor': number;
    'HAP-Param-GATT-Valid-Range': number;
    'HAP-Param-HAP-Step-Value-Descriptor': number;
    'HAP-Param-HAP-Service-Properties': number;
    'HAP-Param-HAP-Linked-Services': number;
    'HAP-Param-HAP-Valid-Values-Descriptor': number;
    'HAP-Param-HAP-Valid-Values-Range-Descriptor': number;
    'HAP-Characteristic-Configuration-Param-Properties': number;
    'HAP-Characteristic-Configuration-Param-Broadcast-Interval': number;
    'HAP-Param-Current-State-Number': number;
    'HAP-Param-Current-Config-Number': number;
    'HAP-Param-Accessory-Advertising-Identifier': number;
    'HAP-Param-Broadcast-Encryption-Key': number;
};
/**
 * See Table 6-26
 */
export declare const HapStatusCodes: {
    0: {
        definition: string;
        description: string;
    };
    1: {
        definition: string;
        description: string;
    };
    2: {
        definition: string;
        description: string;
    };
    3: {
        definition: string;
        description: string;
    };
    4: {
        definition: string;
        description: string;
    };
    5: {
        definition: string;
        description: string;
    };
    6: {
        definition: string;
        description: string;
    };
};
/**
 * See Table 6-34
 */
export declare const ServiceProperties: {
    1: string;
    2: string;
};
/**
 * See Table 6-35
 */
export declare const CharacteristicDescriptions: {
    1: string;
    2: string;
    4: string;
    8: string;
    16: string;
    32: string;
    64: string;
    128: string;
    256: string;
};
/**
 * See Table 6-36
 */
export declare const BTSigToHapFormat: Map<number, string>;
/**
 * See Table 6-37
 */
export declare const BTSigToHapUnit: Map<number, string>;
/**
 * See Chapter 6.4.4.3
 */
export declare const ServiceInstanceIdUuid = "E604E95D-A759-4817-87D3-AA005083A0D1";
/**
 * See Chapter 6.4.4.5.2
 */
export declare const CharacteristicInstanceIdUuid = "DC46F0FE-81D2-4616-B5D9-6ABDD796939A";
export declare const CharacteristicInstanceIdShortUuid = "939A";
/**
 * See Chapter 6.4.4.5.4
 */
export declare const ServiceSignatureUuid = "000000A5-0000-1000-8000-0026BB765291";
//# sourceMappingURL=gatt-constants.d.ts.map